button {
    color: white;
    /* To not let the browser split the icon and label. */
    white-space: nowrap;
}

.menu button {
    /* Since there is no color or button style, use bold to indicate a control. */
    font-weight: bold;
}

.container button {
    /* Fix the line-height to make the padding appear equal. */
    line-height: 1;
    padding: .6em;
    /* Indicate a control by color and shadow. */
    background: lightpink;
    box-shadow: 1px 1px 2px lightgray;
    /* Buttons side by side have a default spacing, but if they break on mobile devices there is none. */
    margin-bottom: .3em;
}

/* To position buttons on the same line as other contents use a control wrapper. */
.control {
    display: flex;
}

/* The first child must be the other content. The second child is the button. */
.control > *:first-child {
    flex: 1 1 auto;
    margin-right: 20px;
}

/* Actions are buttons to be visible independently from scroll. */
.actions {
    position: sticky;
    bottom: 0;
    /* Some spacing to the remaining content. */
    padding-top: .5em;
    /* To be above table headers (1000) and below menu (10000). */
    z-index: 2000;
    /* Use flex to allow multiple elements inside. */
    display: flex;
    /* Enforce minimum distance but do not add up with spacing from previous elements. */
    margin-top: 1.5em;
}

/* Fade out the other content if the actions are in fixed mode of sticky. */
.actions:before {
    content: "";
    position: absolute;
    /* Start fading above the actions start. */
    top: -2em;
    right: 0;
    left: 0;
    bottom: 0;
    /* At 50% the start of the actions is reached. So the actions background appears white. */
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 50%);
}

/* All buttons inside the actions must be relative to have the z-index raised above the pseudo:before. */
.actions > * {
    position: relative;
    /* Never grow, only shrink if needed. */
    flex: 0 1 auto;
}

/* Space between the elements but not on the edges. */
.actions > *:not(:first-child) {
    margin-left: 20px;
}

/* A special input container inside the action will always fill the remaining space. */
.actions .fill {
    width: 100%;
}

